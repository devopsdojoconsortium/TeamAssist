# Mac
*.DS_Store
DS_Store

patches
*.log
.lib/
dist/*
target/
lib_managed/



# Compiled source #
*.com
*.class
*.dll
*.exe
*.o
*.so

# Packages #

# it's better to unpack these files and commit the raw source
# git has its own built in compression methods
*.7z
*.dmg
*.gz
*.iso
*.jar
*.rar
*.tar
*.zip


# User-specific files
*.suo
*.user
*.sln.docstates

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
build/
tests/
bld/
#src/common/AssemblyInfo.cs
[Bb]in/
[Oo]bj/

# Roslyn cache directories
*.ide/

src_managed/
project/boot/
project/plugins/project/


# ENSIME specific
.ensime_cache/
.ensime

# Scala-IDE specific
.scala_dependencies
.worksheet


# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

#NUNIT
*.VisualState.xml
TestResult.xml

# Build Results of an ATL Project
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c

node_modules/
.idea/
.sass-cache/
*.sublime-project
*.sublime-workspace

package-lock.json

# Ignoring local builds (CI build the project)
build/

# Ignoring generated by TaskRunner files (CI generate)
workspace/index.html
workspace/styles/index.css
workspace/scripts/templates/templates.js

# Docker build artifacts
CICD/docker/apache-sso/src
CICD/docker/eventstore/certs


*_i.c
*_p.c
*_i.h
*.ilk
*.obj
*.pch
*.pdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*.log
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc

# Chutzpah Test files
_Chutzpah*

# Visual C++ cache files
ipch/
*.aps
*.ncb
*.opensdf
*.sdf
*.cachefile

# Visual Studio profiler
*.psess
*.vsp
*.vspx


# Visual Studio 2015 cache/options directory
.vs/



# DNX
project.lock.json
project.fragment.lock.json
artifacts/
*.meta

# Visual C++ cache files

*.opendb


*.VC.db

*.VC.VC.opendb

# Visual Studio profiler

# TFS 2012 Local Workspace
$tf/

# Guidance Automation Toolkit
*.gpState

# ReSharper is a .NET coding add-in
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user

# JustCode is a .NET coding addin-in
.JustCode

# TeamCity is a build add-in
_TeamCity*

# DotCover is a Code Coverage Tool
*.dotCover

# NCrunch
_NCrunch_*
.*crunch*.local.xml

# MightyMoose
*.mm.*
AutoTest.Net/

# Web workbench (sass)
.sass-cache/

# Installshield output folder
[Ee]xpress/

# DocProject is a documentation generator add-in
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

# Click-Once directory
publish/


*.sap


# Visual Studio code coverage results
*.coverage
*.coveragexml
nCrunchTemp_*



*.publishproj



# Microsoft Azure Emulator
ecf/

# Windows Store app package directories and files

AppPackages/
BundleArtifacts/
Package.StoreAssociation.xml
_pkginfo.txt

# Visual Studio cache files
# files ending in .cache can be ignored
*.[Cc]ache
# but keep track of directories ending in .cache
!*.[Cc]ache/

# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
## TODO: Comment the next line if you want to checkin your
## web deploy settings but do note that will include unencrypted
## passwords
*.pubxml

# NuGet Packages Directory
src/packages/*
## TODO: If the tool you use requires repositories.config
## uncomment the next line
#!packages/repositories.config

# Enable "build/" folder in the NuGet Packages folder since
# NuGet packages use it for MSBuild targets.
# This line needs to be after the ignore of the build folder
# (and the packages folder if the line above has been uncommented)
!packages/build/
*.nupkg
# The packages folder can be ignored because of Package Restore
**/packages/*
# except build/, which is used as an MSBuild target.
!**/packages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/packages/repositories.config
# NuGet v3's project.json files produces more ignoreable files
*.nuget.props
*.nuget.targets



*.userosscache



# User-specific files (MonoDevelop/Xamarin Studio)
*.userprefs





x86/

[Ll]og/


# Windows Azure Build Output
csx/
*.build.csdef

# Windows Store app package directory
AppPackages/

# Others
sql/
*.Cache
ClientBin/
[Ss]tyle[Cc]op.*
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.pfx
*.publishsettings
node_modules/
tools/FAKE/
tools/NUnit.Runners/


# RIA/Silverlight projects
Generated_Code/

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm

# SQL Server files
*.mdf
*.ldf

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings

# Microsoft Fakes
FakesAssemblies/


### Windows ###
# Windows image file caches
Thumbs.db
ehthumbs.db

# Folder config file
Desktop.ini

# Recycle Bin used on file shares
$RECYCLE.BIN/

# Windows Installer files
*.cab
*.msi
*.msm
*.msp

.jfm
rcf/


# GhostDoc plugin setting file
*.GhostDoc.xml

# Node.js Tools for Visual Studio
.ntvs_analysis.dat


# Visual Studio 6 build log
*.plg



# Visual Studio 6 workspace options file
*.opt

# Visual Studio LightSwitch build output
**/*.HTMLClient/GeneratedArtifacts
**/*.DesktopClient/GeneratedArtifacts
**/*.DesktopClient/ModelManifest.xml
**/*.Server/GeneratedArtifacts
**/*.Server/ModelManifest.xml
_Pvt_Extensions


# Paket dependency manager
.paket/paket.exe
paket-files/


# FAKE - F# Make
.fake/

# JetBrains Rider
.idea/
*.sln.iml


# CodeRush
.cr/

# Python Tools for Visual Studio (PTVS)
__pycache__/
*.pyc

# Editor-specific
.idea
*.sublime-project
*.sublime-workspace
.settings

# Installed libs
node_modules

# Generated and util
test/browser/page/tests-bundle.js
dist/
cruft/

# Misc
ignore
npm-debug.log
ts/*
!ts/cycle.d.ts
